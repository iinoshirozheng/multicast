name: C++ CI with Makefile

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [g++, clang++]
        exclude:
          # Exclude gcc on macOS
          - os: macos-latest
            compiler: g++

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update
          sudo apt-get install -y make g++ clang
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew install make llvm
        fi
      shell: bash

    - name: Build
      run: |
        cd stream_buffer
        make all
      env:
        CXX: ${{ matrix.compiler }}

    - name: Run tests
      run: |
        cd stream_buffer
        make test
      env:
        CXX: ${{ matrix.compiler }}
      
  static-analysis:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install cppcheck
      run: sudo apt-get update && sudo apt-get install -y cppcheck
      
    - name: Run cppcheck
      run: cppcheck --enable=all --suppress=missingIncludeSystem --error-exitcode=1 -I stream_buffer/include --suppress=unusedFunction stream_buffer/
      
  code-coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y lcov g++
    
    - name: Build with coverage
      run: |
        cd stream_buffer
        make debug CXXFLAGS="-std=c++17 -Wall -Wextra -Wpedantic -O0 -g --coverage -pthread"
    
    - name: Run tests with coverage
      run: |
        cd stream_buffer
        make test CXXFLAGS="-std=c++17 -Wall -Wextra -Wpedantic -O0 -g --coverage -pthread"

    - name: Generate coverage report
      run: |
        cd stream_buffer
        lcov --directory . --capture --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        lcov --list coverage.info
